/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 14.12.1 ] */

/* [wxMaxima: title   start ]
Reproducing harmonic2.cpp in Maxima
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
Steeb Hardy Ch.13. Harmonic oscillator and recursion relation

We consider again the one-dimensional harmonic oscillalor (see 11). 

The eigenvalue equation can be brought into the form
$$
   \left({d^2 \over d\xi^2} - 2 \xi {d \over d\xi} + \lambda + 1 \right) \tilde u(\xi) = 0 . (1) 
$$

Inserting the ansatz
$$
 \tilde u(\xi) = H(\xi)\exp(-\xi^2/2)      (2)
$$

into the linear second order ordinary differential equation (1) yields

$$
   \left({d^2 \over d\xi^2} - 2 \xi {d \over d\xi} + \lambda \right) H(\xi) = 0 (3) 
$$

To find the solution of (3) we consider the power series ansatz

$$
 H(\xi) = \sum_{m=0}^\infty a_m \xi^m             (4)
$$

where a_m are the expansion coefficients with a_0, a_1 constants of integration. 

We have 

$$
a_0 = {(-1)^{n/2} n! \over {n/2}!}, a_1=0 for n=O, 2, 4, .... (5)
$$

$$
a_1 = {2(-1)^{(n-1)/2} n! \over {(n-1)/2}!}, a_0=0 for n=1,3,5, .... (6)
$$

In the SymbolicC++ program we show that the expansion coefficients a_m
satisify,

\begin{math}\displaystyle
[\mathrm{a}\left( m+2\right) =\frac{\left( 2\,m-\lambda\right) \,\mathrm{a}\left( m\right) }{{m}^{2}+3\,m+2}]
\end{math}

where m =0,1 .....
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Just an example of depends:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
depends(phi,xi,phi,m);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phi: a(m)*(xi^m)+a(m+1)*(xi^(m+1))+a(m+2)*(xi^(m+2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
define new function with ":="   :
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f(xi,m) := a(m)*(xi^m)+a(m+1)*(xi^(m+1))+a(m+2)*(xi^(m+2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
/* not needed: depends(R1,xi,R1,m)*/

define derivative of f over xi:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
R1: diff(f(xi,m),xi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
R1 : -2*R1*xi;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
functions;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now define 2nd derivative of f over xi:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
depends(R2,xi,R2,m);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
not needed: R2 := diff(f,xi,2);
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
R2 : diff(f(xi,m+2),xi,2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
R3 : R2 + R1 + %lambda*f(xi,m);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
R4 : rat(R3/(xi^m));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
R5 : coeff(R4,xi^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
R5;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
g(m):=(m^2+7*m+12)*a(m+4)+(−2*m+%lambda−4)*a(m+2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
-- here I define g(m) by hand, but I want it to be defined via R5 automatically
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
g(m):=ev(R5);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
R6 : g(m-2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
eqn : g(m-2)=0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(eqn,a(m+2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
-- this gives Eq.7 in the relevant chapter of Steeb and Hardy in a nicer form than symbolic cpp.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
print(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
args(coeff(R4,xi^2));
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
